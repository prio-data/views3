version: "3.9"
services:
   seclevel-fixer:
      image: alpine/openssl
      entrypoint:  ["sed", "-i", "s/SECLEVEL=[0-9]/SECLEVEL=1/g", "/etc/ssl/openssl.cnf"]
      volumes:
         - openssl-conf:/etc/ssl/

   certificate-permissions:
     image: bash:5.1.16 
     entrypoint: ["bash", "-c", "cp /mnt/certs/* /mnt/fixed && chown -R 1005:1005 /mnt/fixed"]
     env_file:
       - gunicorn_config.env
     volumes:
        - ~/.postgresql:/mnt/certs:ro
        - certs:/mnt/fixed:rw

   storefront:
      image: views3/storefront:new_arch

      env_file:
         - services.env

      ports:
         - "4000:80"
      networks:
         - backend

      depends_on:
         - certificate-permissions
         - queryset-manager
         - data-service

      restart: always

   redis_db:
      image: redis
      networks:
         - backend

      restart: always

   queryset-manager:
      image: views3/queryset-manager:new_arch

      environment:
         QUERYSET_MANAGER_DB_HOST: $QUERYSET_MANAGER_DB_HOST
         QUERYSET_MANAGER_DB_PORT: $QUERYSET_MANAGER_DB_PORT
         QUERYSET_MANAGER_DB_NAME: $QUERYSET_MANAGER_DB_NAME
         QUERYSET_MANAGER_DB_USER: $QUERYSET_MANAGER_DB_USER
         QUERYSET_MANAGER_DB_SSL: $QUERYSET_MANAGER_DB_SSL
         DATA_SERVICE_URL: $DATA_SERVICE_URL

         LOG_LEVEL: $LOG_LEVEL

      env_file:
         - gunicorn_config.env
         - services.env
         - config.env

      ports:
         - "4002:8080"

      volumes:
         - ./logs:/home/gunicorn/log
         - openssl-conf:/etc/ssl/
         - certs:/home/gunicorn/.postgresql:ro

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - seclevel-fixer

      restart: always

   data-service:
      image: views3/views_data_service:dev

      command: >
         bash -c "cd /views_data_service/
         && /home/gunicorn/.local/bin/celery -A celery_app worker --loglevel=INFO --logfile=/home/gunicorn/log/transform.log --detach -n worker_xform\%h --queues=transform
         && /home/gunicorn/.local/bin/celery -A celery_app worker --loglevel=INFO --logfile=/home/gunicorn/log/fetch.log --detach --pool=solo -n worker_fetch\%h --queues=fetch
         && python3 -m gunicorn -c /home/gunicorn/gunicorn.conf.py
         && tail -f /dev/null"

      environment:
         LOG_LEVEL: $LOG_LEVEL
         DATA_SERVICE_DB_HOST: $QUERYSET_MANAGER_DB_HOST
         DATA_SERVICE_DB_USER: $QUERYSET_MANAGER_DB_USER

      env_file:
         - gunicorn_config.env
         - services.env
         - config.env

      ports:
         - "4003:8080"

      extra_hosts:
         - "hermes:130.238.55.73"

      volumes:
         - ./logs:/home/gunicorn/log
         - ./cache:/home/gunicorn/cache
         - openssl-conf:/etc/ssl/
         - certs:/home/gunicorn/.postgresql:ro

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - seclevel-fixer
         - redis_db

      restart: always

#   docs:
#      image: views3/docs:4.0.1

#      environment:
#         DOCS_DB_HOST: $DOCS_DB_HOST
#         DOCS_DB_PORT: $DOCS_DB_PORT
#         DOCS_DB_NAME: $DOCS_DB_NAME
#         DOCS_DB_USER: $DOCS_DB_USER
#         DOCS_DB_SSL: $DB_SSL

#         LOG_LEVEL: $LOG_LEVEL

#      env_file:
#         - gunicorn_config.env
#         - services.env

#      volumes:
#         - ./logs:/home/gunicorn/log
#         - openssl-conf:/etc/ssl/
#         - certs:/home/gunicorn/.postgresql:ro

#      ports:
#         - "4001:8080"
#      networks:
#         - backend

#      depends_on:
#         - certificate-permissions
#         - seclevel-fixer

#      restart: always

volumes:
   certs:
   openssl-conf:

networks:
   backend:

