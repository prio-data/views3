version: "3.9"
services:
   seclevel-fixer:
      image: alpine/openssl
      entrypoint:  ["sed", "-i", "s/SECLEVEL=[0-9]/SECLEVEL=1/g", "/etc/ssl/openssl.cnf"]
      volumes:
         - openssl-conf:/etc/ssl/

   certificate-permissions:
     image: bash:5.1.16 
     entrypoint: ["bash", "-c", "cp /mnt/certs/* /mnt/fixed && chown -R 1005:1005 /mnt/fixed"]
     volumes:
        - ~/.postgresql:/mnt/certs:ro
        - certs:/mnt/fixed:rw

   log_aggregator:
      image: peder2911/logagg:1.0.0
      ports:
         - "4008:8080"
      volumes:
         - ./logs:/var/log/services

   storefront:
      image: views3/storefront:2.0.1

      env_file:
         - services.env

      ports:
         - "4000:80"
      networks:
         - backend

      depends_on:
         - certificate-permissions
         - docs
         - queryset-manager

      restart: always

   data-cache:
      image: peder2911/restfiles:2.0.1

      environment:
         LOG_LEVEL:      $LOG_LEVEL
         GUNICORN_WORKERS: $WORKERS_HEAVY

      env_file:
         - gunicorn_config.env

      volumes:
         - ./logs:/home/gunicorn/log
         - ./cache:/home/gunicorn/cache

      ports:
         - "4007:8080"

      networks:
         - backend

      restart: always

   docs:
      image: views3/docs:4.0.1

      environment:
         DOCS_DB_HOST: $DOCS_DB_HOST
         DOCS_DB_PORT: $DOCS_DB_PORT
         DOCS_DB_NAME: $DOCS_DB_NAME
         DOCS_DB_USER: $DOCS_DB_USER
         DOCS_DB_SSL: $DB_SSL

         LOG_LEVEL: $LOG_LEVEL

      env_file:
         - gunicorn_config.env
         - services.env

      volumes:
         - ./logs:/home/gunicorn/log
         - openssl-conf:/etc/ssl/
         - certs:/home/gunicorn/.postgresql:ro

      ports:
         - "4001:8080"
      networks:
         - backend

      depends_on:
         - certificate-permissions
         - seclevel-fixer

      restart: always

   queryset-manager:
      image: views3/queryset-manager:4.2.1

      environment:
         QUERYSET_MANAGER_DB_HOST: $QUERYSET_MANAGER_DB_HOST
         QUERYSET_MANAGER_DB_PORT: $QUERYSET_MANAGER_DB_PORT
         QUERYSET_MANAGER_DB_NAME: $QUERYSET_MANAGER_DB_NAME
         QUERYSET_MANAGER_DB_USER: $QUERYSET_MANAGER_DB_USER
         QUERYSET_MANAGER_DB_SSL: $QUERYSET_MANAGER_DB_SSL

         LOG_LEVEL: $LOG_LEVEL

      env_file:
         - gunicorn_config.env
         - services.env
         - config.env

      ports:
         - "4002:8080"

      volumes:
         - ./logs:/home/gunicorn/log
         - openssl-conf:/etc/ssl/
         - certs:/home/gunicorn/.postgresql:ro

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - seclevel-fixer
         - job-manager

      restart: always

   jobman-redis:
      image: redis
      networks:
         - backend

      restart: always

   job-manager:
      image: views3/job-manager:4.2.5

      environment:
         LOG_LEVEL: $LOG_LEVEL
         MAX_RETRIES: $JOB_MANAGER_MAX_RETRIES
         RETRY_SLEEP: $JOB_MANAGER_RETRY_SLEEP

         GUNICORN_WORKERS: $WORKERS_HEAVY

      env_file:
         - gunicorn_config.env
         - services.env
         - config.env

      ports:
         - "4003:8080"

      volumes:
         - ./logs:/home/gunicorn/log

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - router
         - jobman-redis

      restart: always

   router:
      image: views3/router:4.1.1

      environment:
         LOG_LEVEL: $LOG_LEVEL

         GUNICORN_WORKERS: $WORKERS_HEAVY

      env_file:
         - gunicorn_config.env
         - services.env
         - config.env

      ports:
         - "4004:8080"

      volumes:
         - ./logs:/home/gunicorn/log

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - base-data-retriever
         - data-transformer

      restart: always

   base-data-retriever:
      image: views3/base-data-retriever:5.3.3

      environment:
         BASE_DATA_RETRIEVER_OUTER_JOINS: "True"

         BASE_DATA_RETRIEVER_DB_HOST:     $BASE_DATA_RETRIEVER_DB_HOST
         BASE_DATA_RETRIEVER_DB_PORT:     $BASE_DATA_RETRIEVER_DB_PORT
         BASE_DATA_RETRIEVER_DB_NAME:     $BASE_DATA_RETRIEVER_DB_NAME
         BASE_DATA_RETRIEVER_DB_USER:     $BASE_DATA_RETRIEVER_DB_USER
         BASE_DATA_RETRIEVER_DB_SCHEMA:   $BASE_DATA_RETRIEVER_DB_SCHEMA
         BASE_DATA_RETRIEVER_DB_SSLMODE:  $BASE_DATA_RETRIEVER_DB_SSL
         BASE_DATA_RETRIEVER_LOA_DB_NAME: $BASE_DATA_RETRIEVER_LOA_DB_NAME

         LOG_LEVEL:          $LOG_LEVEL

         GUNICORN_WORKERS: $WORKERS_HEAVY

      env_file:
         gunicorn_config.env

      ports:
         - "4005:8080"

      volumes:
         - ./logs:/home/gunicorn/log
         - certs:/home/gunicorn/.postgresql:ro
         - openssl-conf:/etc/ssl/

      networks:
         - backend

      depends_on:
         - certificate-permissions
         - seclevel-fixer

      restart: always

   data-transformer:
      image: views3/data-transformer:2.4.1
      environment:
         LOG_LEVEL: $LOG_LEVEL

         GUNICORN_WORKERS: $WORKERS_HEAVY

      env_file:
         - services.env
         - gunicorn_config.env
      extra_hosts:
         - 'hermes:$HERMES_IP'

      ports:
         - "4006:8080"

      networks:
         - backend

      volumes:
         - ./logs:/home/gunicorn/log
         - certs:/home/gunicorn/.postgresql:ro
         - openssl-conf:/etc/ssl/

      depends_on:
         - certificate-permissions
         - seclevel-fixer

      restart: always

volumes:
   certs:
   openssl-conf:

networks:
   backend:
      name: views_integration
